{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6593c952-7217-4b98-8870-a67f75347f32"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"5ef7e539-da0e-4be6-afd2-fe9b6de2057f": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "1",
										"1": "190167.33999999636",
										"2": "2.8735733929704184"
									},
									{
										"0": "2",
										"1": "49399.7400000001",
										"2": "3.130726915520635"
									},
									{
										"0": "3",
										"1": "14790.389999999987",
										"2": "2.884803978935047"
									},
									{
										"0": "4",
										"1": "8558.350000000004",
										"2": "2.9976707530648"
									},
									{
										"0": "5",
										"1": "17187.240000000013",
										"2": "2.8550232558139554"
									},
									{
										"0": "6",
										"1": "10741.91",
										"2": "2.8798686327077747"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "PassengerCount",
										"type": "int"
									},
									{
										"key": "1",
										"name": "SumTripDistance",
										"type": "double"
									},
									{
										"key": "2",
										"name": "AvgTripDistance",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ef5a1c9e-0711-4a7b-9cea-b12a868002f3/resourceGroups/bw-synapse-rg/providers/Microsoft.Synapse/workspaces/bw-synapse-ws/bigDataPools/sparkpool1",
				"name": "sparkpool1",
				"type": "Spark",
				"endpoint": "https://bw-synapse-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load(path='abfss://demo@bwsynapseadls.dfs.core.windows.net/NYCTripSmall.parquet',format='parquet')\r\n",
					"display(df)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql('CREATE DATABASE IF NOT EXISTS nyctaxi')\r\n",
					"df.write.mode('overwrite').saveAsTable('nyctaxi.trip')"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df=spark.sql('SELECT * FROM nyctaxi.trip')\r\n",
					"display(df)"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df = spark.sql(\"\"\"\r\n",
					"SELECT PassengerCount,\r\n",
					"        SUM(TripDistanceMiles) as SumTripDistance,\r\n",
					"        AVG(TripDistanceMiles) as AvgTripDistance\r\n",
					"from nyctaxi.trip\r\n",
					"WHERE TripDistanceMiles>0 and PassengerCount>0\r\n",
					"GROUP BY PassengerCount\r\n",
					"ORDER BY PassengerCount\r\n",
					"\"\"\")\r\n",
					"\r\n",
					"display(df)\r\n",
					"df.write.saveAsTable('nyctaxi.passengerscountstat')"
				],
				"execution_count": 9
			}
		]
	}
}